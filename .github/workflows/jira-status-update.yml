name: Update Jira Status on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - release
      - custom
      - custom-qa
  workflow_dispatch:

jobs:
  update-jira:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Extract Jira Issue Key
        id: jira-key
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            JIRA_KEY="NO-18109"
          else
            JIRA_KEY=$(echo "${{ github.event.pull_request.title }}" | grep -o '[A-Z]\+-[0-9]\+' | head -1)
            if [ -z "$JIRA_KEY" ]; then
              JIRA_KEY=$(echo "${{ github.event.pull_request.head.ref }}" | grep -o '[A-Z]\+-[0-9]\+' | head -1)
            fi
          fi
          echo "key=$JIRA_KEY" >> $GITHUB_OUTPUT

      - name: Update Jira Status
        if: steps.jira-key.outputs.key != ''
        run: |
          BRANCH="${{ github.event.pull_request.base.ref }}"
          JIRA_KEY="${{ steps.jira-key.outputs.key }}"
          
          echo "Processing: $JIRA_KEY for branch $BRANCH"
          
          # Test authentication with JIRA_AUTH_TOKEN
          echo "Testing Jira authentication..."
          auth_test=$(curl -s -w "%{http_code}" -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_AUTH_TOKEN }}" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/2/myself" -o /dev/null)
          
          if [ "$auth_test" != "200" ]; then
            echo "Authentication failed: HTTP $auth_test"
            exit 1
          fi
          
          echo "Authentication successful"
          
          # Get issue details
          issue_response=$(curl -s -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_AUTH_TOKEN }}" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$JIRA_KEY?fields=project,status")
          
          echo "Issue response: $issue_response"
          
          project_key=$(echo "$issue_response" | jq -r '.fields.project.key')
          
          # Check if it's NO project (NOOSH ONE)
          if [ "$project_key" != "NO" ]; then
            echo "Skipping: Only for NO project (current: $project_key)"
            exit 0
          fi
          
          echo "Project validated: $project_key"
          
          # Set status based on branch
          case $BRANCH in
            "custom-qa")
              STATUS="FIXED IN QA"
              ;;
            "custom")
              STATUS="FIXED IN UAT"
              ;;
            "release")
              STATUS="FIXED IN STAGE"
              ;;
            *)
              STATUS="FIXED IN STAGE"
              ;;
          esac
          
          echo "Target status: $STATUS"
          
          # Get available transitions
          transitions_response=$(curl -s -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_AUTH_TOKEN }}" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$JIRA_KEY/transitions")
          
          echo "Available transitions: $transitions_response"
          
          # Find transition ID
          transition_id=$(echo "$transitions_response" | jq -r ".transitions[] | select(.name==\"$STATUS\") | .id")
          
          if [ -z "$transition_id" ] || [ "$transition_id" = "null" ]; then
            echo "Status '$STATUS' not found in available transitions"
            echo "Available statuses:"
            echo "$transitions_response" | jq -r '.transitions[].name'
            exit 1
          fi
          
          echo "Found transition ID: $transition_id"
          
          # Perform transition
          result=$(curl -s -w "%{http_code}" -X POST \
            -u "${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_AUTH_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"transition\":{\"id\":\"$transition_id\"}}" \
            "${{ secrets.JIRA_BASE_URL }}/rest/api/2/issue/$JIRA_KEY/transitions" \
            -o /tmp/response.json)
          
          if [ "$result" = "204" ]; then
            echo "Successfully updated $JIRA_KEY to $STATUS"
          else
            echo "Transition failed: HTTP $result"
            cat /tmp/response.json
            exit 1
          fi